/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.List;

import Controller.ExamController;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import View.IndividualView.ViewExam;
import View.MainView;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import View.Edit.EditExam;
import javax.swing.JButton;
import View.Add.AddGradeExam;
import javax.swing.JTable;
import View.Add.AddExamAssesment;

/**
 *
 * @author HP
 */
public class ExamList extends javax.swing.JPanel {

    /**
     * Creates new form ExamList
     */
    
    MainView main_frame;
    
    public ExamList() {
        initComponents();
        try {
            this.loadTable("", "", "", "");
        } catch (SQLException ex) {
            Logger.getLogger(ExamList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public ExamList(MainView mf) {
        initComponents();
        this.main_frame = mf;
        try {
            this.loadTable("", "", "", "");
        } catch (SQLException ex) {
            Logger.getLogger(ExamList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void loadTable(String exm_name, String exm_code, String yr, String semester) throws SQLException{
        try{
            this.clearTable(examTable);
            ExamController ec = new ExamController();
            HashMap<Integer, Map<Integer,String>> hm = ec.getExamDataByFiltering(exm_name, exm_code, yr, semester);
            this.createTable(hm, examTable);
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
        
    }
    
    public void clearTable(JTable tbl){
    
        DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
        int row_count = dtm.getRowCount();
        
        for(int i = row_count-1;i>=0;i--){
            dtm.removeRow(i);
        }
    
    }
    
    public void createTable(HashMap hm, JTable tbl){
        if(!hm.isEmpty()){
            hm.forEach((key,value) -> {
                HashMap<Integer,String> hsh = (HashMap) value;
                //System.out.println("hashmap: "+hsh);
                int hlength = hsh.size();
                String[] tbl_data=new String[hlength];
                hsh.forEach((k,v) -> {
                    tbl_data[k] = v;
                    //System.out.println("The grade value: " + v);
                });
                DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
                dtm.addRow(tbl_data);
            });
        }
    }
    
//    public void clearTable(){
//        Formattings fmt = new Formattings();
//        fmt.clearTable(examTable);
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topicLabel = new javax.swing.JLabel();
        examNameLabel = new javax.swing.JLabel();
        examCodeLabel = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        semesterLabel = new javax.swing.JLabel();
        examNameText = new javax.swing.JTextField();
        examCodeText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        addGradeButton = new javax.swing.JButton();
        addAssesmentButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        examTable = new javax.swing.JTable();
        yearComboBx = new javax.swing.JComboBox<>();
        semesterComboBx = new javax.swing.JComboBox<>();

        topicLabel.setFont(new java.awt.Font("Iskoola Pota", 1, 18)); // NOI18N
        topicLabel.setText("විභාග සහ තරගාවලි පිලිබද තොරතුරු සටහන");

        examNameLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        examNameLabel.setText("විභාගයේ හෝ තරගාවලියේ නම:");

        examCodeLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        examCodeLabel.setText("කේතාංකය:");

        yearLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        yearLabel.setText("වර්ෂය:");

        semesterLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        semesterLabel.setText("වාරය:");

        examNameText.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N

        examCodeText.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N

        searchButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        searchButton.setText("සොයන්න");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        clearButton.setText("මකා දමන්න");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        viewButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        viewButton.setText("තව දුරටත් විස්තර පෙන්වන්න");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        editButton.setText("අදාල තොරතුර යාවත්කාලීන කරන්න");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        addGradeButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        addGradeButton.setText("විභාගය පැවැත්වෙන ශ්‍රේණිය පිලිබද විස්තර ඇතුලත් කරන්න‍");
        addGradeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGradeButtonActionPerformed(evt);
            }
        });

        addAssesmentButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        addAssesmentButton.setText("තරගාවලියේ අඩංගු තරග විස්තර ඇතුලත් කරන්න");
        addAssesmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAssesmentButtonActionPerformed(evt);
            }
        });

        examTable.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        examTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "පද්ධති කේතය", "විභාගය", "වාරය", "විභාගය පටන් ගන්නා දිනය", "විභාගය අවසන් වන දිනය"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(examTable);

        yearComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        yearComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "වර්ෂය තෝරන්න", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));

        semesterComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        semesterComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "වාරය තෝරන්න", "First Semester", "Second Semester", "Third Semester", "Forth Semester", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1278, Short.MAX_VALUE)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(examCodeLabel)
                            .addComponent(examNameLabel)
                            .addComponent(yearLabel)
                            .addComponent(semesterLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(examCodeText, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(examNameText)
                                    .addComponent(yearComboBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(semesterComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(topicLabel)
                                .addGap(108, 108, 108)))
                        .addGap(425, 425, 425))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editButton)
                        .addGap(18, 18, 18)
                        .addComponent(addGradeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addAssesmentButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(topicLabel)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(examNameLabel)
                    .addComponent(examNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(examCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(examCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearLabel)
                    .addComponent(yearComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(semesterLabel)
                    .addComponent(semesterComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(clearButton))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAssesmentButton)
                    .addComponent(addGradeButton)
                    .addComponent(editButton)
                    .addComponent(viewButton))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int row = examTable.getSelectedRow();
        System.out.println("selected row: " + row);
        if(row>-1){
            DefaultTableModel dtm = (DefaultTableModel) examTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            ExamController ec = new ExamController();
            HashMap hm = ec.getExamInfoById(id);
            if(!hm.isEmpty()){
                String exm_id = hm.get(0).toString();
                String exm_code = hm.get(1).toString();
                String exm_name = hm.get(2).toString();
                String yr = hm.get(3).toString();
                String semester = hm.get(4).toString();
                String from_date = hm.get(5).toString();
                String to_date = hm.get(6).toString();
                String details = hm.get(7).toString();
                
                ViewExam ve = new ViewExam(main_frame);
                ve.setExamName(exm_name);
                ve.setExamCode(exm_code);
                ve.setYear(yr);
                ve.setSemester(semester);
                ve.setFromDate(from_date);
                ve.setToDate(to_date);
                ve.setDetails(details);
                //JFrame frame = new MainView();
                
                main_frame.add_new_component(ve,exm_code+" - information");
            }
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String exam_name = examNameText.getText();
        String exam_code = examCodeText.getText();
        String year = (String) yearComboBx.getSelectedItem();
        String year_fmt = year.equals("වර්ෂය තෝරන්න")?"":year;
        String semester = (String) semesterComboBx.getSelectedItem();
        String semester_fmt = semester.equals("වාරය තෝරන්න")?"":semester;
        System.out.println("exam_name: " + exam_name);
        System.out.println("exam code: " + exam_code);
        System.out.println("year: " + year_fmt);
        System.out.println("semester: " + semester_fmt);
        
        try {           
            this.loadTable(exam_name, exam_code, year_fmt, semester_fmt);
        } catch (SQLException ex) {
            Logger.getLogger(ExamList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void clear_search_content(){
        examNameText.setText("");
        examCodeText.setText("");
        yearComboBx.setSelectedIndex(0);
        semesterComboBx.setSelectedIndex(0);
    }
    
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        this.clear_search_content();
        try {
            this.loadTable("", "", "", "");
        } catch (SQLException ex) {
            Logger.getLogger(ExamList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clearButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        int row = examTable.getSelectedRow();
        System.out.println("selected row: " + row);
        if(row>-1){
            DefaultTableModel dtm = (DefaultTableModel) examTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            ExamController ec = new ExamController();
            HashMap hm = ec.getExamInfoById(id);
            if(!hm.isEmpty()){
                String exm_id = hm.get(0).toString();
                String exm_code = hm.get(1).toString();
                String exm_name = hm.get(2).toString();
                String yr = hm.get(3).toString();
                String semester = hm.get(4).toString();
                String from_date = hm.get(5).toString();
                String to_date = hm.get(6).toString();
                String details = hm.get(7).toString();
                
                EditExam ee = new EditExam(main_frame);
                ee.setExamId(exm_id);
                ee.setExamName(exm_name);
                ee.setExamCode(exm_code);
                ee.setYear(yr);
                ee.setSemester(semester);
                ee.setFromDate(from_date);
                ee.setToDate(to_date);
                ee.setDetails(details);
                
                //JFrame frame = new MainView();
                main_frame.add_new_component(ee,exm_code+" - update");
            }
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void addGradeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGradeButtonActionPerformed
        // TODO add your handling code here:
        int row = examTable.getSelectedRow();
        if(row > -1){
            DefaultTableModel dtm = (DefaultTableModel) examTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            String ename = dtm.getValueAt(row, 1).toString();
            AddGradeExam age = new AddGradeExam(main_frame, id);
            //age.setExamId(id);
            age.setExamName(ename);
            
            main_frame.add_new_component(age, ename+" - add grade");
        }
    }//GEN-LAST:event_addGradeButtonActionPerformed

    private void addAssesmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAssesmentButtonActionPerformed
        // TODO add your handling code here:
        int row = examTable.getSelectedRow();
        if(row > -1){
            DefaultTableModel dtm = (DefaultTableModel) examTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            String ename = dtm.getValueAt(row, 1).toString();
            AddExamAssesment aea = new AddExamAssesment(main_frame, id);
            //age.setExamId(id);
            aea.setExamName(ename);
            
            main_frame.add_new_component(aea, ename+" - add assesment");
        }
    }//GEN-LAST:event_addAssesmentButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAssesmentButton;
    private javax.swing.JButton addGradeButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel examCodeLabel;
    private javax.swing.JTextField examCodeText;
    private javax.swing.JLabel examNameLabel;
    private javax.swing.JTextField examNameText;
    private javax.swing.JTable examTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> semesterComboBx;
    private javax.swing.JLabel semesterLabel;
    private javax.swing.JLabel topicLabel;
    private javax.swing.JButton viewButton;
    private javax.swing.JComboBox<String> yearComboBx;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
}
