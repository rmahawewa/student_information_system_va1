/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.List;

import Controller.GradeController;
import Controller.StudentController;
import View.Add.AddGradeExam;
import View.MainView;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import View.IndividualView.Student.ViewStudent_fromList;
import View.Add.AddStudentFamilyInfo;
import Controller.StudentFamilyMemberController;
import View.Add.AddOldStudentInfo;
import View.Add.AddStudentSchoolInfo;
import View.Edit.EditStudent;

/**
 *
 * @author HP
 */
public class StudentList extends javax.swing.JPanel {
    
    MainView mv;

    /**
     * Creates new form StudentList
     */
    public StudentList() {
        initComponents();
    }
    
    public StudentList(MainView mf) {
        initComponents();
        this.mv = mf;
        this.loadGrades();
        this.load_table("","","",0,"");
    }
    
    public void loadGrades(){
        GradeController gc = new GradeController();
        try {
            String grade_combo_box_first_item = "වසර තෝරන්න";
            gradeComboBx.addItem(grade_combo_box_first_item);
            HashMap<Integer, Map<Integer,String>> hm = gc.getAllGrades();
            if(!hm.isEmpty()){
                hm.forEach((key,value) -> {
                    gradeComboBx.addItem(value.get(1));
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentList.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void load_table(String student_name, String student_code, String medical_status,int grade, String school){
        StudentController sc = new StudentController();
        HashMap<Integer, Map<Integer,String>> mp = sc.ListStudents(student_name, student_code, medical_status, grade, school);
        System.out.println("The student list is: " + mp);
        this.clearTable(studentInformationTable);
        this.createTable(mp, studentInformationTable);
    }
    
    public void clearTable(JTable tbl){
    
        DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
        int row_count = dtm.getRowCount();
        
        for(int i = row_count-1;i>=0;i--){
            dtm.removeRow(i);
        }
    
    }
    
    public void createTable(HashMap hm, JTable tbl){
        if(!hm.isEmpty()){
            hm.forEach((key,value) -> {
                HashMap<Integer,String> hsh = (HashMap) value;
                //System.out.println("hashmap: "+hsh);
                int hlength = hsh.size();
                String[] tbl_data=new String[hlength];
                hsh.forEach((k,v) -> {
                    tbl_data[k] = v;
                    //System.out.println("The grade value: " + v);
                });
                DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
                dtm.addRow(tbl_data);
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topicLabel = new javax.swing.JLabel();
        studentCodeText = new javax.swing.JTextField();
        medicalStatusText = new javax.swing.JTextField();
        schoolText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        studentNameLabel = new javax.swing.JLabel();
        studentCodeLabel = new javax.swing.JLabel();
        schoolLabel = new javax.swing.JLabel();
        medicalStatusLabel = new javax.swing.JLabel();
        gradeLabel = new javax.swing.JLabel();
        studentNameText = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        oldStudentButton = new javax.swing.JButton();
        addFamilyMemberButton = new javax.swing.JButton();
        addSchoolButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentInformationTable = new javax.swing.JTable();
        gradeComboBx = new javax.swing.JComboBox<>();

        topicLabel.setFont(new java.awt.Font("Iskoola Pota", 1, 18)); // NOI18N
        topicLabel.setText("ශිෂ්‍ය තොරතුරු සටහන");

        studentCodeText.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N

        medicalStatusText.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N

        schoolText.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N

        searchButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        searchButton.setText("සොයන්න");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        studentNameLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        studentNameLabel.setText("සිසු/සිසුවියගේ නම:");

        studentCodeLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        studentCodeLabel.setText("ඇතුලත් වීමේ අංකය:");

        schoolLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        schoolLabel.setText("පාසල:");

        medicalStatusLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        medicalStatusLabel.setText("විශේෂ සෞඛ්‍ය අවශ්‍යතාවය:");

        gradeLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        gradeLabel.setText("වසර:");

        studentNameText.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N

        clearButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        clearButton.setText("මකා දමන්න");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        editButton.setText("අදාල තොරතුරු යාවත්කාලීන කරන්න");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        oldStudentButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        oldStudentButton.setText("ආදි ශිෂ්‍ය තොරතුරු ඇතුලත් කරන්න");
        oldStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldStudentButtonActionPerformed(evt);
            }
        });

        addFamilyMemberButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        addFamilyMemberButton.setText("පවුලේ විස්තර ඇතුලත් කරන්න");
        addFamilyMemberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFamilyMemberButtonActionPerformed(evt);
            }
        });

        addSchoolButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        addSchoolButton.setText("පාසල් තොරතුරු ඇතුලත් තරන්න");
        addSchoolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSchoolButtonActionPerformed(evt);
            }
        });

        viewButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        viewButton.setText("තව දුරටත් විස්තර පෙන්වන්න");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        studentInformationTable.setFont(new java.awt.Font("Iskoola Pota", 0, 12)); // NOI18N
        studentInformationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "පද්ධති කේතය", "සිසුවාගේ/සිසුවියගේ නම", "උපන් දිනය", "වසර"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(studentInformationTable);

        gradeComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(editButton)
                                .addGap(18, 18, 18)
                                .addComponent(oldStudentButton)
                                .addGap(18, 18, 18)
                                .addComponent(addFamilyMemberButton)
                                .addGap(18, 18, 18)
                                .addComponent(addSchoolButton, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentNameLabel)
                            .addComponent(studentCodeLabel)
                            .addComponent(medicalStatusLabel)
                            .addComponent(gradeLabel)
                            .addComponent(schoolLabel))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(schoolText)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(studentCodeText)
                            .addComponent(medicalStatusText)
                            .addComponent(studentNameText)
                            .addComponent(gradeComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(topicLabel)
                .addGap(511, 511, 511))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(topicLabel)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNameLabel)
                    .addComponent(studentNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(studentCodeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(medicalStatusLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(gradeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(schoolLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(studentCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(medicalStatusText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gradeComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(schoolText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchButton)
                            .addComponent(clearButton))))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(oldStudentButton)
                    .addComponent(addFamilyMemberButton)
                    .addComponent(addSchoolButton)
                    .addComponent(viewButton))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String student_name = studentNameText.getText();
        String student_code = studentCodeText.getText();
        String medical_status = medicalStatusText.getText();
        int grade_id = 0;
        String grade = gradeComboBx.getSelectedItem().toString();
        String grade_first_item_sinhala_translation = "වසර තෝරන්න";
        if(!grade.equals(grade_first_item_sinhala_translation)){
            
            GradeController gc = new GradeController();
            try {
                grade_id = gc.getGradeId(grade);
            } catch (SQLException ex) {
                Logger.getLogger(AddGradeExam.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        String school = schoolText.getText();
        this.load_table(student_name, student_code, medical_status, grade_id, school);
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        this.clearSearchContent();
        this.load_table("", "", "", 0, "");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int row = studentInformationTable.getSelectedRow();
        if(row > -1){
            try {
                DefaultTableModel dtm = (DefaultTableModel) studentInformationTable.getModel();
                int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
                int grade = Integer.parseInt(dtm.getValueAt(row, 3).toString());
                GradeController gc = new GradeController();
                String grade_in_text = gc.get_grade_in_words(grade);
                StudentController sc = new StudentController();
                List<String> l = sc.get_student_details_by_id(id);
                ViewStudent_fromList vsfl = new ViewStudent_fromList(mv, id);
                vsfl.setName(l.get(0));
                vsfl.setAddress(l.get(1));
                vsfl.setBirthday(l.get(2));
                vsfl.setContactNumber(l.get(3));
                vsfl.setPhoto(l.get(4));
                vsfl.setIdentityCode(l.get(5));
                vsfl.setPassportLabel(l.get(6));
                vsfl.setDateOfEntarance(l.get(7));
                vsfl.setGradeInYearOfEntarance(l.get(8));
                vsfl.setCurrentGrade(grade_in_text);
                mv.add_new_component(vsfl, "සිසු/සිසුවියගේ තොරතුරු");
            } catch (SQLException ex) {
                Logger.getLogger(StudentList.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_viewButtonActionPerformed
        
    private void addFamilyMemberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFamilyMemberButtonActionPerformed
        // TODO add your handling code here:
        int row = studentInformationTable.getSelectedRow();
        if(row > -1){
            try {
                DefaultTableModel dtm = (DefaultTableModel) studentInformationTable.getModel();
                int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
                String name = dtm.getValueAt(row, 1).toString();
                AddStudentFamilyInfo adsfi = new AddStudentFamilyInfo(mv, id);
                adsfi.set_student_name(name);
                mv.add_new_component(adsfi, "පවුලේ විස්තර ඇතුලත් කිරීම");
            } catch (SQLException ex) {
                Logger.getLogger(StudentList.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_addFamilyMemberButtonActionPerformed

    private void addSchoolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSchoolButtonActionPerformed
        // TODO add your handling code here:
        int row = studentInformationTable.getSelectedRow();
        if(row > -1){
            DefaultTableModel dtm = (DefaultTableModel) studentInformationTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            String name = dtm.getValueAt(row, 1).toString();
            AddStudentSchoolInfo adssi = new AddStudentSchoolInfo(mv, id);
            adssi.set_student_name(name);
            mv.add_new_component(adssi, "පාසල් විස්තර ඇතුලත් කිරීම");
        }
    }//GEN-LAST:event_addSchoolButtonActionPerformed

    private void oldStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldStudentButtonActionPerformed
        // TODO add your handling code here:
        
        int row = studentInformationTable.getSelectedRow();
        if(row > -1){
            DefaultTableModel dtm = (DefaultTableModel) studentInformationTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            String name = dtm.getValueAt(row, 1).toString();
            AddOldStudentInfo aosi = new AddOldStudentInfo(mv, id);
            aosi.set_student_name(name);
            mv.add_new_component(aosi, "ආදි ශිෂ්‍ය විස්තර ඇතුලත් කිරීම");
        }
        
    }//GEN-LAST:event_oldStudentButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        int row = studentInformationTable.getSelectedRow();
        if(row > -1){
            try {
                DefaultTableModel dtm = (DefaultTableModel) studentInformationTable.getModel();
                int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
                StudentController sc = new StudentController();
                List<String> l = sc.get_student_details_by_id(id);
                EditStudent es = new EditStudent(mv, id);
                es.setName(l.get(0));
                es.setAddress(l.get(1));
                es.setBirthday(l.get(2));
                es.setContactNumber(l.get(3));
                es.setPhoto(l.get(4));
                es.setIdentityCode(l.get(5));
                es.setPassportLabel(l.get(6));
                es.setDateOfEntarance(l.get(7));
                es.setGradeInYearOfEntarance(l.get(8));
                mv.add_new_component(es, "ශිෂ්‍ය තොරතුරු යාවත්කාලීන කිරීම");
            } catch (SQLException ex) {
                Logger.getLogger(StudentList.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editButtonActionPerformed
    
    private void clearSearchContent(){
        studentNameText.setText("");
        studentCodeText.setText("");
        medicalStatusText.setText("");
        gradeComboBx.setSelectedIndex(0);
        schoolText.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFamilyMemberButton;
    private javax.swing.JButton addSchoolButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton editButton;
    private javax.swing.JComboBox<String> gradeComboBx;
    private javax.swing.JLabel gradeLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel medicalStatusLabel;
    private javax.swing.JTextField medicalStatusText;
    private javax.swing.JButton oldStudentButton;
    private javax.swing.JLabel schoolLabel;
    private javax.swing.JTextField schoolText;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel studentCodeLabel;
    private javax.swing.JTextField studentCodeText;
    private javax.swing.JTable studentInformationTable;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JTextField studentNameText;
    private javax.swing.JLabel topicLabel;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
