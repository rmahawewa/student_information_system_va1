/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.List;

import View.MainView;
import javax.swing.JTable;
import Controller.ExamAssesmentController;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import UserLibraries.GetTimes;
import View.IndividualView.ViewIndividualExamAssesment;
import View.Edit.EditExamAssesment;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import View.Add.StudentAssesmentExam;

/**
 *
 * @author HP
 */
public class ListOfAssesmentsInExams extends javax.swing.JPanel {
    
    private MainView mv;

    /**
     * Creates new form ListOfAssesmentsInExams
     */
    public ListOfAssesmentsInExams() {
        initComponents();
    }
    
    public ListOfAssesmentsInExams(MainView mf) throws SQLException {
        initComponents();
        this.mv = mf;
        this.load_table("", "", "", "", "", assesmtsInExamTable);
    }
    
    private void load_table(String exam_name, String asmt_name, String date, String time, String level, JTable tble) throws SQLException{
        ExamAssesmentController eac = new ExamAssesmentController();
        HashMap<Integer, Map<Integer,String>> mp = eac.getExamAssesmentInfo(exam_name, asmt_name, date, time, level);
        System.out.println(mp);
        this.clear_table(tble);
        this.create_table(tble, mp);
    }
    
    private void clear_table(JTable table){
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        int row_count = dtm.getRowCount();
        
        for(int i = row_count-1; i>=0; i--){
            dtm.removeRow(i);
        }
    }
    
    private void create_table(JTable table, HashMap hm){
        if(!hm.isEmpty()){
            hm.forEach((key,value) -> {
                HashMap<Integer, String> mp = (HashMap<Integer, String>) value;
                int hlngth = mp.size();
                String[] tbl_data = new String[hlngth];
                mp.forEach((k,v) -> {
                    tbl_data[k] = v;
                });
                DefaultTableModel dtm = (DefaultTableModel) table.getModel();
                dtm.addRow(tbl_data);
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topicLabel = new javax.swing.JLabel();
        examNameLabel = new javax.swing.JLabel();
        assesmentNameLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        level_label = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        addStudentButton = new javax.swing.JButton();
        examNameText = new javax.swing.JTextField();
        assignmentNameText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        assesmtsInExamTable = new javax.swing.JTable();
        hoursComboBx = new javax.swing.JComboBox<>();
        minutesComboBx = new javax.swing.JComboBox<>();
        ampmComboBx = new javax.swing.JComboBox<>();
        dateYearComboBx = new javax.swing.JComboBox<>();
        dateMonthComboBx = new javax.swing.JComboBox<>();
        dateDayComboBx = new javax.swing.JComboBox<>();
        levelComboBx = new javax.swing.JComboBox<>();

        topicLabel.setFont(new java.awt.Font("Iskoola Pota", 1, 18)); // NOI18N
        topicLabel.setText("තරගාවලි සහ ඒවායේ තරග පිලිබද විස්තර");

        examNameLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        examNameLabel.setText("තරගාවලියේ නම:");

        assesmentNameLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        assesmentNameLabel.setText("තරගයේ නම:");

        dateLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        dateLabel.setText("දිනය:");

        timeLabel.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        timeLabel.setText("වේලාව:");

        level_label.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        level_label.setText("මට්ටම:");

        searchButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        searchButton.setText("සොයන්න");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        clearButton.setText("මකා දමන්න");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        viewButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        viewButton.setText("තව දුරටත් විස්තර පෙන්වන්න");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        editButton.setText("අදාල තොරතුරු යාවත්කාලීන කරන්න");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        addStudentButton.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        addStudentButton.setText("අදාල ශිෂ්‍ය විස්තර ඇතුලත් කරන්න");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        examNameText.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N

        assignmentNameText.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        assignmentNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignmentNameTextActionPerformed(evt);
            }
        });

        assesmtsInExamTable.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        assesmtsInExamTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "පද්ධති කේතය", "තරගාවලිය", "තරගය", "මට්ටම", "දිනය සහ වේලාව"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(assesmtsInExamTable);

        hoursComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        hoursComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "පැය", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        minutesComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        minutesComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "මිනිත්තු", "00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55" }));

        ampmComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        ampmComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "පෙරවරු", "පස්වරු" }));
        ampmComboBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ampmComboBxActionPerformed(evt);
            }
        });

        dateYearComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        dateYearComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "වර්ෂය", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));

        dateMonthComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        dateMonthComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "මාසය", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        dateMonthComboBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateMonthComboBxActionPerformed(evt);
            }
        });

        dateDayComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        dateDayComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "දිනය", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        levelComboBx.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        levelComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "මට්ටම තෝරන්න", "ප්‍රාදේශීය මට්ටම", "දිස්ත්‍රික් මට්ටම", "පලාත් මට්ටම", "සමස්ත ලංකා මට්ටම", "ජ්‍යාත්‍යන්තර මට්ටම" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(level_label)
                            .addComponent(assesmentNameLabel)
                            .addComponent(examNameLabel)
                            .addComponent(dateLabel)
                            .addComponent(timeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(topicLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(assignmentNameText)
                                .addComponent(examNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(hoursComboBx, 0, 100, Short.MAX_VALUE)
                                        .addComponent(dateYearComboBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(minutesComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(ampmComboBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(dateMonthComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addComponent(dateDayComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(levelComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editButton)
                        .addGap(26, 26, 26)
                        .addComponent(addStudentButton))
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(topicLabel)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(examNameLabel)
                    .addComponent(examNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assesmentNameLabel)
                    .addComponent(assignmentNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateLabel)
                            .addComponent(dateYearComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timeLabel)
                            .addComponent(hoursComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minutesComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ampmComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateMonthComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateDayComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(level_label)
                    .addComponent(levelComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(clearButton))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewButton)
                    .addComponent(editButton)
                    .addComponent(addStudentButton))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ampmComboBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ampmComboBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ampmComboBxActionPerformed

    private void dateMonthComboBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateMonthComboBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateMonthComboBxActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String exm_name = examNameText.getText();
        String asmt_name = assignmentNameText.getText();
        String year = dateYearComboBx.getSelectedItem().toString();
        year = year.equals("Year")?"":year;
        String month = dateMonthComboBx.getSelectedItem().toString();
        month = month.equals("Month")?"":month;
        String day = dateDayComboBx.getSelectedItem().toString();
        day = day.equals("Day")?"":day;
        String hour = hoursComboBx.getSelectedItem().toString();
        hour = hour.equals("Hour")?"":hour;
        String minute = minutesComboBx.getSelectedItem().toString();
        minute = minute.equals("Minute")?"":minute;
        String ampm = ampmComboBx.getSelectedItem().toString();
        String level = levelComboBx.getSelectedItem().toString();
        level = level.equals("Select Level")?"":level;
        
        //month = GetTimes.getMonthNumber(month);
        if(ampm.equals("PM")){
            int hour_i = Integer.parseInt(hour) + 12;
            hour = Integer.toString(hour_i);
        }
        String date = "";
        String time = ""; 
        
        if(!year.equals("") && !month.equals("") && !day.equals("")){
            date = year + "-" + month + "-" + day;
        }
        if(!hour.equals("") && !minute.equals("")){
            time = hour + ":" + minute + ":00";
        }

        try {
            this.load_table(exm_name, asmt_name, date, time, level, assesmtsInExamTable);
        } catch (SQLException ex) {
            Logger.getLogger(ListOfAssesmentsInExams.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        examNameText.setText("");
        assignmentNameText.setText("");
        dateYearComboBx.setSelectedIndex(0);
        dateMonthComboBx.setSelectedIndex(0);
        dateDayComboBx.setSelectedIndex(0);
        hoursComboBx.setSelectedIndex(0);
        minutesComboBx.setSelectedIndex(0);
        ampmComboBx.setSelectedIndex(0);
        levelComboBx.setSelectedIndex(0);
        try {
            this.load_table("", "", "", "", "", assesmtsInExamTable);
        } catch (SQLException ex) {
            Logger.getLogger(ListOfAssesmentsInExams.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clearButtonActionPerformed

    private void assignmentNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignmentNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignmentNameTextActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int row = assesmtsInExamTable.getSelectedRow();
        if(row > -1){
            DefaultTableModel dtm = (DefaultTableModel) assesmtsInExamTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            ExamAssesmentController eac = new ExamAssesmentController();
            HashMap<Integer, String> hm = new HashMap<Integer, String>();
            try {
                hm = eac.getInfoByExamAssesmentId(id);
            } catch (SQLException ex) {
                Logger.getLogger(ListOfAssesmentsInExams.class.getName()).log(Level.SEVERE, null, ex);
            }
            ViewIndividualExamAssesment form = new ViewIndividualExamAssesment(mv);
            form.setExamName(hm.get(1));
            form.setAssesmentName(hm.get(2));
            form.setGrade(hm.get(3));
            form.setLevel(hm.get(4));
            form.setSession(hm.get(5));
            form.setDate(hm.get(6));
            form.setTime(hm.get(7));
            mv.add_new_component(form, "Assesment in Exam");
        }        
        
    }//GEN-LAST:event_viewButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        int row = assesmtsInExamTable.getSelectedRow();
        if(row > -1){
            DefaultTableModel dtm = (DefaultTableModel) assesmtsInExamTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            ExamAssesmentController eac = new ExamAssesmentController();
            HashMap<Integer, String> hm = new HashMap<Integer, String>();
            try {
                hm = eac.getInfoByExamAssesmentId(id);
            } catch (SQLException ex) {
                Logger.getLogger(ListOfAssesmentsInExams.class.getName()).log(Level.SEVERE, null, ex);
            }
            String ea_id = hm.get(0);
            String examName = hm.get(1);
            String assesmentName = hm.get(2);
            String grade = hm.get(3);
            String level = hm.get(4);
            String session = hm.get(5);
            String date = hm.get(6);
            String time = hm.get(7);
            String[] date_arr = date.split("-");
            String[] time_arr = time.split(":");
            int hour = Integer.parseInt(time_arr[0]);
            String noon = hour>12?"PM":"AM";
            hour = hour>12?(hour-12):hour;
            String s_hour = Integer.toString(hour);
            
            EditExamAssesment eea = new EditExamAssesment(mv);
            eea.set_id(id);
            eea.set_exam_name(examName);
            eea.set_assesment_name(assesmentName);
            eea.set_grade(grade);
            eea.set_level(level);
            eea.set_session(session);
            eea.set_date(date_arr[0], date_arr[1], date_arr[2]);
            eea.set_time(s_hour, time_arr[1], noon);
            mv.add_new_component(eea, "Edit Assesment in Exam");
            
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        // TODO add your handling code here:
        int row = assesmtsInExamTable.getSelectedRow();
        if(row > -1){
            DefaultTableModel dtm = (DefaultTableModel) assesmtsInExamTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            HashMap<Integer,String> hm = new HashMap<Integer,String>();
            ExamAssesmentController eac = new ExamAssesmentController();
            try {
                hm = eac.getInfoByExamAssesmentId(id);
                String e_a_id = hm.get(0);
                String exam_name = hm.get(1);
                String assesment_name = hm.get(2);
                StudentAssesmentExam sae = new StudentAssesmentExam(mv);
                sae.set_exam_assesment_id(Integer.parseInt(e_a_id));
                sae.set_exam_name(exam_name);
                sae.set_assesment_name(assesment_name);
                mv.add_new_component(sae, "Add students for Assesment");
            } catch (SQLException ex) {
                Logger.getLogger(ListOfAssesmentsInExams.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addStudentButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudentButton;
    private javax.swing.JComboBox<String> ampmComboBx;
    private javax.swing.JLabel assesmentNameLabel;
    private javax.swing.JTable assesmtsInExamTable;
    private javax.swing.JTextField assignmentNameText;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> dateDayComboBx;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JComboBox<String> dateMonthComboBx;
    private javax.swing.JComboBox<String> dateYearComboBx;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel examNameLabel;
    private javax.swing.JTextField examNameText;
    private javax.swing.JComboBox<String> hoursComboBx;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> levelComboBx;
    private javax.swing.JLabel level_label;
    private javax.swing.JComboBox<String> minutesComboBx;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel topicLabel;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
