/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.List;

import Controller.ExamAssesmentController;
import Controller.ExamController;
import UserLibraries.GetTimes;
import Controller.ExamGradeController;
import Controller.GradeController;
import View.Add.AddGradeExam;
import View.IndividualView.ViewIndividualGradeExam;
import View.MainView;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import View.Edit.EditGradeExam;

/**
 *
 * @author HP
 */
public class GradeExamList extends javax.swing.JPanel {
    
    MainView mv;

    /**
     * Creates new form ListOfAssesmentsInExams
     */
    public GradeExamList() {
        initComponents();
        //this.loadTable(TOOL_TIP_TEXT_KEY, TOOL_TIP_TEXT_KEY, TOOL_TIP_TEXT_KEY, TOOL_TIP_TEXT_KEY, TOOL_TIP_TEXT_KEY);
    }
    
    public GradeExamList(MainView mf) {
        initComponents();
        this.mv = mf;
        this.loadGrades();
        try {
            this.loadTable("", "", "", "", "");
        } catch (SQLException ex) {
            Logger.getLogger(GradeExamList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void loadGrades(){
        GradeController gc = new GradeController();
        try {
            gradeComboBx.addItem("");
            HashMap<Integer, Map<Integer,String>> hm = gc.getAllGrades();
            if(!hm.isEmpty()){
                hm.forEach((key,value) -> {
                    gradeComboBx.addItem(value.get(1));
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddGradeExam.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topicLabel = new javax.swing.JLabel();
        examNameLabel = new javax.swing.JLabel();
        assesmentNameLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        level_label = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        examNameText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        examsForGradesTable = new javax.swing.JTable();
        yearComboBx = new javax.swing.JComboBox<>();
        monthComboBx = new javax.swing.JComboBox<>();
        dateComboBx = new javax.swing.JComboBox<>();
        hourComboBx = new javax.swing.JComboBox<>();
        minuteComboBx = new javax.swing.JComboBox<>();
        ampmComboBx = new javax.swing.JComboBox<>();
        gradeComboBx = new javax.swing.JComboBox<>();
        sessionComboBx = new javax.swing.JComboBox<>();

        topicLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        topicLabel.setText("Exams for Grades");

        examNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        examNameLabel.setText("Exam name:");

        assesmentNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        assesmentNameLabel.setText("Grade:");

        dateLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dateLabel.setText("Date:");

        timeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        timeLabel.setText("Time:");

        level_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        level_label.setText("Session:");

        searchButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        viewButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        examNameText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        examsForGradesTable.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        examsForGradesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Exam", "Grade", "Session", "Date Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(examsForGradesTable);

        yearComboBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        yearComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));

        monthComboBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        monthComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        dateComboBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dateComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        hourComboBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hourComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        minuteComboBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        minuteComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute", "00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55" }));

        ampmComboBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ampmComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));

        gradeComboBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        sessionComboBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sessionComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Session", "First Session", "Second Session", "Third Session", "Forth Session" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(topicLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(assesmentNameLabel)
                                    .addComponent(examNameLabel)
                                    .addComponent(dateLabel)
                                    .addComponent(timeLabel)
                                    .addComponent(level_label))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(hourComboBx, 0, 100, Short.MAX_VALUE)
                                            .addComponent(yearComboBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(monthComboBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(minuteComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(18, 18, 18)
                                        .addComponent(dateComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(236, 236, 236)
                                        .addComponent(ampmComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(examNameText)
                                    .addComponent(gradeComboBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(167, Short.MAX_VALUE)
                    .addComponent(sessionComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(116, 116, 116)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(topicLabel)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(examNameLabel)
                    .addComponent(examNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assesmentNameLabel)
                    .addComponent(gradeComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(yearComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeLabel)
                    .addComponent(hourComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minuteComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ampmComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(level_label)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(clearButton))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewButton)
                    .addComponent(editButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(272, 272, 272)
                    .addComponent(sessionComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(667, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String exam_name = examNameText.getText();
        String grade = gradeComboBx.getSelectedItem().toString();
        String year = yearComboBx.getSelectedItem().toString();
        String month = monthComboBx.getSelectedItem().toString();
        String day = dateComboBx.getSelectedItem().toString();
        String hour = hourComboBx.getSelectedItem().toString();
        String minute = minuteComboBx.getSelectedItem().toString();
        String ampm = ampmComboBx.getSelectedItem().toString();
        String session = sessionComboBx.getSelectedItem().toString();
        String month_number = GetTimes.getMonthNumber(month);
        String date = "";
        String time = "";
        if(!year.equals("Year") && !month.equals("Month") && !day.equals("Day")){
            date = year + "-" + month_number + "-" + day;
        }
        if(!hour.equals("Hour") && !minute.equals("Minute")){
            int hour_i = Integer.parseInt(hour);
            hour_i = ampm.equals("AM")?hour_i:(hour_i+12);
            hour = Integer.toString(hour_i);        
            time = hour + ":" + minute + ":00";
        }        
        String sessn  = session.equals("First Session")?"1":(session.equals("Second Session")?"2":(session.equals("Third Session")?"3":(session.equals("Forth Session")?"4":"")));
        try {
            this.loadTable(exam_name, grade, date, time, sessn);
        } catch (SQLException ex) {
            Logger.getLogger(GradeExamList.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_searchButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int row = examsForGradesTable.getSelectedRow();
        if(row > -1){
            DefaultTableModel dtm = (DefaultTableModel) examsForGradesTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            String exam = dtm.getValueAt(row, 1).toString();
            String grade = dtm.getValueAt(row, 2).toString();
            String session = dtm.getValueAt(row, 3).toString();
            String date_time = dtm.getValueAt(row, 4).toString();
            String[] datetime = date_time.split(" ");
            
            ViewIndividualGradeExam form = new ViewIndividualGradeExam(mv);
            form.set_exam_name(exam);
            form.set_grade(grade);
            form.set_session(session);
            form.set_date(datetime[0]);
            form.set_time(datetime[1]);
            mv.add_new_component(form, "Grade Exam info");
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        int row = examsForGradesTable.getSelectedRow();
        if(row > -1){
            DefaultTableModel dtm = (DefaultTableModel) examsForGradesTable.getModel();
            int id = Integer.parseInt(dtm.getValueAt(row, 0).toString());
            String exam = dtm.getValueAt(row, 1).toString();
            String grade = dtm.getValueAt(row, 2).toString();
            String session = dtm.getValueAt(row, 3).toString();
            String ssn = session.equals("1")?"First Session":(session.equals("2")?"Second Session":(session.equals("3")?"Third Session":(session.equals("4")?"Forth Session":"Session")));
            String date_time = dtm.getValueAt(row, 4).toString();
            String[] datetime = date_time.split(" ");
            String[]  date = datetime[0].split("-");
            String month = GetTimes.getMonthText(date[1]);
            String[] time = datetime[1].split(":");
            String ampm = "AM";
            String hour = time[0];
            if(Integer.parseInt(hour) > 12){
                int h = Integer.parseInt(hour);
                h = h - 12;
                hour = Integer.toString(h);
                ampm = "PM";
            }
            
            
            EditGradeExam form = new EditGradeExam(mv, id);
            form.set_exam_name(exam);
            form.set_grade(grade);
            form.set_session(ssn);
            form.set_date(date[0],month,date[2]);
            form.set_time(hour, time[1], ampm);
            mv.add_new_component(form, "Grade Exam edit");
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        examNameText.setText("");
        gradeComboBx.setSelectedIndex(0);
        yearComboBx.setSelectedIndex(0);
        monthComboBx.setSelectedIndex(0);
        dateComboBx.setSelectedIndex(0);
        hourComboBx.setSelectedIndex(0);
        minuteComboBx.setSelectedIndex(0);
        ampmComboBx.setSelectedIndex(0);
        sessionComboBx.setSelectedIndex(0);
        
        try {
            loadTable("", "", "", "", "");
        } catch (SQLException ex) {
            Logger.getLogger(GradeExamList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clearButtonActionPerformed

    
    public void loadTable(String exam_name, String grade, String date, String time, String session) throws SQLException{
        try{
            this.clearTable(examsForGradesTable);
            ExamGradeController egc = new ExamGradeController();
            HashMap <Integer, Map<Integer, String>> hm = egc.getFilteredRecords(exam_name, grade, date, time, session);
            this.createTable(hm, examsForGradesTable);
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
        
    }
    
    public void clearTable(JTable tbl){
    
        DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
        int row_count = dtm.getRowCount();
        
        for(int i = row_count-1;i>=0;i--){
            dtm.removeRow(i);
        }
    
    }
    
    public void createTable(HashMap hm, JTable tbl){
        if(!hm.isEmpty()){
            hm.forEach((key,value) -> {
                HashMap<Integer,String> hsh = (HashMap) value;
                //System.out.println("hashmap: "+hsh);
                int hlength = hsh.size();
                String[] tbl_data=new String[hlength];
                hsh.forEach((k,v) -> {
                    tbl_data[k] = v;
                    //System.out.println("The grade value: " + v);
                });
                DefaultTableModel dtm = (DefaultTableModel) tbl.getModel();
                dtm.addRow(tbl_data);
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ampmComboBx;
    private javax.swing.JLabel assesmentNameLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> dateComboBx;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel examNameLabel;
    private javax.swing.JTextField examNameText;
    private javax.swing.JTable examsForGradesTable;
    private javax.swing.JComboBox<String> gradeComboBx;
    private javax.swing.JComboBox<String> hourComboBx;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel level_label;
    private javax.swing.JComboBox<String> minuteComboBx;
    private javax.swing.JComboBox<String> monthComboBx;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> sessionComboBx;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel topicLabel;
    private javax.swing.JButton viewButton;
    private javax.swing.JComboBox<String> yearComboBx;
    // End of variables declaration//GEN-END:variables
}
